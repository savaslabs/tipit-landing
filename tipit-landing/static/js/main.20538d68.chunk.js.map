{"version":3,"sources":["theme/appstyles.module.css","assets/x-close.svg","assets/x-close-pink.svg","assets/dashes.svg","assets/dashes-white.svg","assets/ava-blue.svg","assets/labs.svg","assets/info.svg","assets/info-white.svg","assets/settings.svg","assets/settings-white.svg","theme/index.js","components/AppContext.js","components/Title.js","components/Dashes.js","components/InfoModal.js","components/ThemeToggle.js","components/PercentInput.js","components/Settings.js","components/SettingsModal.js","components/Header.js","components/CurrencyInput.js","components/Results.js","components/Calculator.js","components/LabsLogo.js","components/Landing.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","palette","colors","text","clear","link","background","row","inputBorder","themedColors","default","light","dark","AppContext","React","createContext","useTheme","theme","useContext","Title","style","color","fontSize","marginTop","paddingBottom","Dashes","context","src","require","alt","maxWidth","width","paddingTop","backgroundColor","InfoModal","Modal","setAppElement","useState","modalIsOpen","setIsOpen","closeModal","domRect","document","getElementById","getBoundingClientRect","overlayStyle","height","left","top","margin","isOpen","onAfterOpen","onRequestClose","overlay","content","border","className","styles","container","inputRow","alignItems","justifyContent","button","padding","onClick","icon","paddingLeft","normalText","textAlign","label","footer","position","bottom","display","paddingRight","href","type","id","ThemeToggle","Switch","onChange","toggleTheme","checked","PercentInput","value","props","Fragment","marginRight","for","minWidth","min","max","step","e","target","marginLeft","Settings","defaultTipLow","defaultTipHigh","updateTipLowContext","updateTipHighContext","SettingsModal","Header","CurrencyInput","Results","results","tableWrapper","scope","map","result","bill","tip","total","key","resultID","palindrome","str","lowRegStr","toLowerCase","replace","split","reverse","join","findPalTips","billAmount","tipPercentLow","tipPercentHigh","numLow","numHigh","palindromeArray","i","n","toFixed","toString","push","parseFloat","Result","this","Calculator","tipLow","setTipLow","tipHigh","setTipHigh","setBill","setResults","message","setMessage","findResults","billFloat","tipLowFloat","tipHighFloat","tipArray","allTotalArray","stringBill","Number","stringTip","stringTotal","arrayTipsAndTotals","palTotalArray","findPalTotals","console","log","length","useEffect","htmlFor","name","aria-label","helper","inputGroup","minHeight","clearButton","LabsLogo","viewBox","fill","xmlns","transform","d","fill-rule","clip-rule","mask-type","maskUnits","x","y","mask","Landing","stroke","setStroke","handleToggleFocus","canvasRef","useRef","canvasContext","setCanvasContext","current","ctx","getContext","canvas","window","innerWidth","innerHeight","font","fillStyle","columns","Math","floor","rows","binChars","bits","r","c","random","hasDrawn","now","delta","then","Date","bit","clearRect","fillText","draw","requestAnimationFrame","newVal","onFocus","onBlur","filter","rx","stroke-width","cx","cy","filterUnits","colorInterpolationFilters","floodOpacity","in","values","dy","stdDeviation","mode","in2","fontWeight","overflow","ref","App","ReactGA","initialize","pageview","location","pathname","initialAppLoad","setInitialAppLoad","setDefaultTipLow","setDefaultTipHigh","setTheme","userSettings","themeStylesheet","includes","input","localStorage","getItem","savedSettings","JSON","parse","error","_retrieveData","settingsToSave","setItem","stringify","_storeData","Provider","Boolean","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.20538d68.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"appstyles_body__1WI_Y\",\"container\":\"appstyles_container__1zCM8\",\"label\":\"appstyles_label__7nTHQ\",\"helper\":\"appstyles_helper__1ho5R\",\"normalText\":\"appstyles_normalText__1t-HD\",\"clearButton\":\"appstyles_clearButton__SrfMC\",\"inputGroup\":\"appstyles_inputGroup__GSkwK\",\"inputRow\":\"appstyles_inputRow__3wWaa\",\"footer\":\"appstyles_footer__1lX5b\",\"tableWrapper\":\"appstyles_tableWrapper__2zTL7\"};","module.exports = __webpack_public_path__ + \"static/media/x-close.749fc1ce.svg\";","module.exports = __webpack_public_path__ + \"static/media/x-close-pink.af3523aa.svg\";","module.exports = __webpack_public_path__ + \"static/media/dashes.188e66f7.svg\";","module.exports = __webpack_public_path__ + \"static/media/dashes-white.69f83b20.svg\";","module.exports = __webpack_public_path__ + \"static/media/ava-blue.256311d1.svg\";","module.exports = __webpack_public_path__ + \"static/media/labs.c7c96ed0.svg\";","module.exports = __webpack_public_path__ + \"static/media/info.a21bafa4.svg\";","module.exports = __webpack_public_path__ + \"static/media/info-white.023d2d3e.svg\";","module.exports = __webpack_public_path__ + \"static/media/settings.6ae6bc54.svg\";","module.exports = __webpack_public_path__ + \"static/media/settings-white.89059317.svg\";","const palette = {\n  black: \"#000000\",\n  white: \"#FFFFFF\",\n  darkestGray: \"#252525\",\n  red: \"#FF0000\",\n  blue: \"#0000EE\",\n  pink: \"#F35A69\",\n  gray: \"#d3d3d3\",\n  darkGray: \"#828282\",\n};\n\nexport const colors = {\n  text: palette.black,\n  clear: palette.red,\n  link: palette.blue,\n  background: palette.white,\n  row: palette.gray,\n  inputBorder: palette.darkGray,\n};\n\nexport const themedColors = {\n  default: {\n    ...colors,\n  },\n  light: {\n    ...colors,\n  },\n  dark: {\n    ...colors,\n    text: palette.white,\n    background: palette.darkestGray,\n    link: palette.pink,\n    clear: palette.pink,\n    row: palette.darkGray,\n  },\n};\n","import React, { useContext } from 'react'\nimport { themedColors } from '../theme/index'\n\nconst AppContext = React.createContext()\n\nexport const useTheme = () => {\n    const theme = useContext(AppContext).theme;\n    const colors = theme ? themedColors[theme] : themedColors.default\n    return {\n        colors,\n        theme,\n  }\n}\n\nexport default AppContext","import React, { useContext } from \"react\";\nimport AppContext from \"./AppContext\";\n\nexport const Title = () => {\n  const context = useContext(AppContext);\n  const { colors } = context.useTheme();\n  return (\n    <h1\n      style={{\n        color: colors.text,\n        fontSize: 36,\n        marginTop: 30,\n        paddingBottom: 10,\n      }}\n    >\n      tipit\n    </h1>\n  );\n};\n","import React, { useContext } from \"react\";\nimport AppContext from \"./AppContext\";\n\nexport const Dashes = () => {\n  const context = useContext(AppContext);\n  const theme = context.theme;\n  const { colors } = context.useTheme();\n\n  return (\n    <img\n      src={\n        theme === \"light\"\n          ? require(\"../assets/dashes.svg\")\n          : require(\"../assets/dashes-white.svg\")\n      }\n      alt=\"dashes\"\n      style={{\n        maxWidth: 500,\n        width: \"100%\",\n        paddingTop: 10,\n        paddingBottom: 10,\n        backgroundColor: colors.background,\n      }}\n    />\n  );\n};\n","import React, { useContext } from \"react\";\nimport Modal from \"react-modal\";\nimport { Title } from \"./Title\";\nimport { Dashes } from \"./Dashes\";\nimport AppContext from \"./AppContext\";\nimport styles from \"../theme/appstyles.module.css\";\n\nexport const InfoModal = () => {\n  Modal.setAppElement(\"#root\");\n\n  const context = useContext(AppContext);\n  const theme = context.theme;\n  const { colors } = context.useTheme();\n\n  const [modalIsOpen, setIsOpen] = React.useState(false);\n  function openModal() {\n    setIsOpen(true);\n  }\n\n  function afterOpenModal() {\n    // @TODO can probably be removed\n  }\n\n  function closeModal() {\n    setIsOpen(false);\n  }\n\n  const domRect = document\n    .getElementById(\"tipit-preview\")\n    ?.getBoundingClientRect();\n\n  const overlayStyle = {\n    height: domRect?.height - 20,\n    left: domRect?.left,\n    top: domRect?.top,\n    width: domRect?.width - 20,\n    margin: 10,\n    background: null,\n  };\n\n  return (\n    <>\n      <Modal\n        isOpen={modalIsOpen}\n        onAfterOpen={afterOpenModal}\n        onRequestClose={closeModal}\n        style={{\n          overlay: overlayStyle,\n          content: {\n            backgroundColor: colors.background,\n            border: \"none\",\n            width: \"auto\",\n            width: overlayStyle.width,\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            right: 0,\n            bottom: 0,\n          },\n        }}\n      >\n        <div className={styles.container} style={{ color: colors.text }}>\n          <div\n            className={styles.inputRow}\n            style={{\n              alignItems: \"baseline\",\n              justifyContent: \"space-between\",\n              marginTop: -10,\n            }}\n          >\n            <button\n              className={styles.button}\n              style={{\n                padding: 15,\n                border: \"none\",\n                backgroundColor: colors.background,\n              }}\n              onClick={closeModal}\n            >\n              <img\n                className={styles.icon}\n                src={\n                  theme === \"light\"\n                    ? require(\"../assets/x-close.svg\")\n                    : require(\"../assets/x-close-pink.svg\")\n                }\n                alt=\"close button\"\n              />\n            </button>\n            <div>\n              <Title />\n            </div>\n            <div style={{ paddingLeft: \"14%\" }}></div>\n          </div>\n          <Dashes />\n          <div>\n            <div\n              className={styles.normalText}\n              style={{ textAlign: \"center\", paddingTop: 15 }}\n            >\n              What is this app?\n            </div>\n            <div\n              className={styles.label}\n              style={{ textAlign: \"center\", paddingTop: 15 }}\n            >\n              A means to enhance palindromic whimsy.\n            </div>\n            <div\n              className={styles.footer}\n              style={{ position: \"absolute\", bottom: 10, width: \"90%\" }}\n            >\n              <div\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"space-between\",\n                  alignItems: \"center\",\n                }}\n              >\n                <div>(c) Savas Labs 2020</div>\n                <div style={{ paddingRight: 10 }}>\n                  <img\n                    alt=\"Savas logo - Ava the owl\"\n                    src={require(\"../assets/ava-blue.svg\")}\n                  />\n                </div>\n              </div>\n              <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                <a style={{ color: colors.link }} href=\"https://savaslabs.com\">\n                  Learn more about our #labs initiative.\n                </a>\n                <div>\n                  <img\n                    style={{ textAlign: \"center\" }}\n                    src={require(\"../assets/labs.svg\")}\n                    alt={\"Savas labs initiative logo\"}\n                  />\n                </div>\n              </div>\n              <Dashes />\n            </div>\n          </div>\n        </div>\n      </Modal>\n      <button\n        type=\"image\"\n        id=\"openInfo\"\n        style={{\n          padding: 5,\n          border: \"none\",\n          backgroundColor: colors.background,\n        }}\n        onClick={openModal}\n      >\n        <img\n          className={styles.icon}\n          src={\n            theme === \"light\"\n              ? require(\"../assets/info.svg\")\n              : require(\"../assets/info-white.svg\")\n          }\n          alt=\"info icon\"\n        />\n      </button>\n    </>\n  );\n};\n\nexport default InfoModal;\n","import React, { useContext } from \"react\";\nimport { Switch } from \"@material-ui/core\";\nimport AppContext from \"./AppContext\";\n\nexport default function ThemeToggle() {\n  const context = useContext(AppContext);\n\n  return (\n    <Switch\n      onChange={context.toggleTheme}\n      checked={context.theme === \"light\" ? false : true}\n    />\n  );\n}\n","import React, { useContext } from \"react\";\nimport AppContext from \"./AppContext\";\nimport styles from \"../theme/appstyles.module.css\";\n\nexport const PercentInput = ({ value, onChange, ...props }) => {\n  const context = useContext(AppContext);\n  const { colors } = context.useTheme();\n  return (\n    <React.Fragment>\n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"baseline\",\n          maxWidth: 60,\n          marginRight: 15,\n          color: colors.text,\n        }}\n      >\n        <label style={{ display: \"none\" }} for={props.id}>\n          {props.id}\n        </label>\n        <input\n          style={{\n            minWidth: 40,\n            paddingRight: 20,\n            textAlign: \"right\",\n            backgroundColor: colors.background,\n            color: colors.text,\n          }}\n          type=\"number\"\n          min=\"0\"\n          max=\"100\"\n          step=\"1\"\n          value={value}\n          onChange={e => onChange(e.target.value)}\n          id={props.id}\n        />\n        <span className={styles.label} style={{ marginLeft: -20 }}>\n          %\n        </span>\n      </div>\n    </React.Fragment>\n  );\n};\n","import React, { useContext } from \"react\";\nimport AppContext from \"./AppContext\";\nimport ThemeToggle from \"./ThemeToggle\";\nimport { PercentInput } from \"./PercentInput\";\nimport styles from \"../theme/appstyles.module.css\";\n\nexport const Settings = () => {\n  const context = useContext(AppContext);\n  const { colors } = context.useTheme();\n\n  const defaultTipLow = context.defaultTipLow;\n  const defaultTipHigh = context.defaultTipHigh;\n\n  return (\n    <div style={{ color: colors.text }}>\n      <h2 className={styles.normalText} style={{ textAlign: \"center\" }}>\n        Settings\n      </h2>\n      <div className={styles.inputRow}>\n        <div className={styles.label}>Low tip default:</div>\n        <PercentInput\n          value={defaultTipLow}\n          onChange={context.updateTipLowContext}\n        />\n      </div>\n      <div className={styles.inputRow} style={{ marginTop: 20 }}>\n        <div className={styles.label}>High tip default:</div>\n        <PercentInput\n          value={defaultTipHigh}\n          onChange={context.updateTipHighContext}\n        />\n      </div>\n      <div className={styles.inputRow} style={{ marginTop: 20 }}>\n        <div className={styles.label}>Dark Mode:</div>\n        <ThemeToggle />\n      </div>\n    </div>\n  );\n};\n","import React, { useContext } from \"react\";\nimport Modal from \"react-modal\";\nimport { Title } from \"./Title\";\nimport { Dashes } from \"./Dashes\";\nimport { Settings } from \"./Settings.js\";\nimport AppContext from \"./AppContext\";\nimport styles from \"../theme/appstyles.module.css\";\n\nexport const SettingsModal = () => {\n  Modal.setAppElement(\"#root\");\n\n  const context = useContext(AppContext);\n  const theme = context.theme;\n  const { colors } = context.useTheme();\n\n  const [modalIsOpen, setIsOpen] = React.useState(false);\n  function openModal() {\n    setIsOpen(true);\n  }\n\n  function closeModal() {\n    setIsOpen(false);\n  }\n\n  const domRect = document\n    .getElementById(\"tipit-preview\")\n    ?.getBoundingClientRect();\n\n  const overlayStyle = {\n    height: domRect?.height - 20,\n    left: domRect?.left,\n    top: domRect?.top,\n    width: domRect?.width - 20,\n    margin: 10,\n    background: null,\n  };\n\n  return (\n    <div>\n      <Modal\n        isOpen={modalIsOpen}\n        onRequestClose={closeModal}\n        style={{\n          overlay: overlayStyle,\n          content: {\n            backgroundColor: colors.background,\n            border: \"none\",\n            width: \"auto\",\n            width: overlayStyle.width,\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            right: 0,\n            bottom: 0,\n          },\n        }}\n      >\n        <div className={styles.container}>\n          <div\n            className={styles.inputRow}\n            style={{\n              marginTop: -10,\n              alignItems: \"baseline\",\n              justifyContent: \"space-between\",\n            }}\n          >\n            <div style={{ paddingLeft: \"14%\" }}></div>\n            <div>\n              <Title />\n            </div>\n            <button\n              className={styles.button}\n              style={{\n                padding: 15,\n                border: \"none\",\n                backgroundColor: colors.background,\n              }}\n              onClick={closeModal}\n            >\n              <img\n                className={styles.icon}\n                src={\n                  theme === \"light\"\n                    ? require(\"../assets/x-close.svg\")\n                    : require(\"../assets/x-close-pink.svg\")\n                }\n                alt=\"close button\"\n              />\n            </button>\n          </div>\n          <Dashes />\n          <Settings />\n          <Dashes />\n        </div>\n      </Modal>\n      <button\n        id=\"openSettings\"\n        style={{\n          padding: 5,\n          border: \"none\",\n          backgroundColor: colors.background,\n        }}\n        onClick={openModal}\n      >\n        <img\n          className={styles.icon}\n          src={\n            theme === \"light\"\n              ? require(\"../assets/settings.svg\")\n              : require(\"../assets/settings-white.svg\")\n          }\n          alt=\"settings icon\"\n        />\n      </button>\n    </div>\n  );\n};\n\nexport default SettingsModal;\n","import React from 'react';\nimport InfoModal from './InfoModal';\nimport SettingsModal from './SettingsModal';\nimport { Title } from './Title';\nimport { Dashes } from './Dashes';\n\nexport const Header = () => (\n  <React.Fragment>\n    <div style={{display: 'flex', alignItems: 'center', justifyContent: 'space-between'}}>\n      <InfoModal />\n      <Title /> \n      <SettingsModal />\n    </div>\n    <Dashes />\n  </React.Fragment>\n)\n\n\n","import React, { useContext } from \"react\";\nimport AppContext from \"./AppContext\";\nimport styles from \"../theme/appstyles.module.css\";\n\nexport const CurrencyInput = ({ value, onChange, ...props }) => {\n  const context = useContext(AppContext);\n  const { colors } = context.useTheme();\n\n  return (\n    <React.Fragment>\n      <div\n        style={{\n          display: \"inline-flex\",\n          alignItems: \"center\",\n          color: colors.text,\n        }}\n      >\n        <span className={styles.label}>$</span>\n        <input\n          style={{\n            paddingLeft: 5,\n            backgroundColor: colors.background,\n            color: colors.text,\n            maxWidth: 150,\n          }}\n          type=\"number\"\n          min=\"0\"\n          max=\"10000\"\n          step=\".01\"\n          value={value}\n          onChange={e => onChange(e.target.value)}\n          id={props.id}\n        />\n      </div>\n    </React.Fragment>\n  );\n};\n","import React, { useContext } from \"react\";\nimport AppContext from \"./AppContext\";\nimport styles from \"../theme/appstyles.module.css\";\n\nexport const Results = ({ results }) => {\n  const context = useContext(AppContext);\n  const { colors } = context.useTheme();\n\n  const renderTableData = () => {\n    return results?.map(result => {\n      const { bill, tip, total } = result; //destructuring\n      return (\n        <tr key={tip}>\n          <td key={bill} style={{ textAlign: \"left\" }}>\n            ${bill} +{\" \"}\n          </td>\n          <td key={tip} style={{ textAlign: \"left\" }}>\n            ${tip}\n          </td>\n          <td key={total} className=\"total__td\">\n            = ${total}\n          </td>\n        </tr>\n      );\n    });\n  };\n\n  return (\n    <div className={styles.tableWrapper}>\n      <table>\n        <tbody>\n          <tr>\n            <th scope=\"col\" style={{ background: colors.background }}>\n              Bill\n            </th>\n            <th scope=\"col\" style={{ background: colors.background }}>\n              Tip\n            </th>\n            <th scope=\"col\" style={{ background: colors.background }}>\n              Total\n            </th>\n          </tr>\n          {renderTableData()}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { CurrencyInput } from \"./CurrencyInput\";\nimport { PercentInput } from \"./PercentInput\";\nimport { Dashes } from \"./Dashes\";\nimport { Results } from \"./Results\";\nimport AppContext from \"./AppContext\";\nimport styles from \"../theme/appstyles.module.css\";\n\nlet resultID = 0;\n\n//Determine if a string is a palindrome\nfunction palindrome(str) {\n  var re = \".\";\n  var lowRegStr = str.toLowerCase().replace(re, \"\");\n  var reverseStr = lowRegStr.split(\"\").reverse().join(\"\");\n  return reverseStr === lowRegStr;\n}\n\n// Returns an array of palindromes between numLow and numHigh\nfunction palindromeArray(numLow, numHigh) {\n  var palindromeArray = [];\n  for (let i = numLow; i <= numHigh; i += 0.01) {\n    let n = i.toFixed(2);\n    if (palindrome(n.toString())) {\n      palindromeArray.push(parseFloat(n));\n    }\n  }\n  return palindromeArray;\n}\n\n//Output all possible palindromic tips within the given parameters.\nfunction findPalTips(billAmount, tipPercentLow, tipPercentHigh) {\n  const tipArray = palindromeArray(\n    billAmount * tipPercentLow * 0.01,\n    billAmount * tipPercentHigh * 0.01\n  );\n  return tipArray;\n}\n\n//Create an array with all totals with palindrome tips\nfunction arrayTipsAndTotals(billAmount, tipArray) {\n  let i;\n  var results = [];\n  let stringBill = billAmount.toFixed(2).toString();\n  for (i of tipArray) {\n    let total = Number(i) + Number(billAmount);\n    let stringTip = i.toFixed(2).toString();\n    let stringTotal = total.toFixed(2).toString();\n    var result = new Result(\n      resultID.toString(),\n      stringBill,\n      stringTip,\n      stringTotal\n    );\n    results.push(result);\n    resultID += 1;\n  }\n  return results;\n}\n\n//Outputs an array of palindromic tips and their corresponding palindromic totals, if any exist.\nfunction findPalTotals(billAmount, tipArray) {\n  let i;\n  var results = [];\n  let stringBill = billAmount.toFixed(2).toString();\n  for (i of tipArray) {\n    let total = Number(billAmount) + Number(i);\n    let stringTotal = total.toFixed(2).toString();\n    let stringTip = i.toFixed(2).toString();\n    if (palindrome(stringTotal)) {\n      const result = new Result(\n        resultID.toString(),\n        stringBill,\n        stringTip,\n        stringTotal\n      );\n      results.push(result);\n    }\n    resultID += 1;\n  }\n  return results;\n}\n\nfunction Result(id, bill, tip, total) {\n  this.id = id;\n  this.bill = bill;\n  this.tip = tip;\n  this.total = total;\n}\n\nexport const Calculator = () => {\n  const context = useContext(AppContext);\n  const { colors } = context.useTheme();\n\n  const [tipLow, setTipLow] = useState(context.defaultTipLow);\n  const [tipHigh, setTipHigh] = useState(context.defaultTipHigh);\n  const [bill, setBill] = useState(\"\");\n  const [results, setResults] = useState([]);\n  const [message, setMessage] = useState(\"\");\n\n  const handleBill = text => {\n    setBill(text);\n  };\n\n  const handleTipLow = text => {\n    setTipLow(text);\n    context.updateTipLowContext(text);\n  };\n  const handleTipHigh = text => {\n    setTipHigh(text);\n    context.updateTipHighContext(text);\n  };\n  const clearTable = () => {\n    setMessage(\"\");\n  };\n  const clearAll = () => {\n    setBill(\"\");\n    clearTable();\n  };\n\n  //Update the state based on the functions above\n  const findResults = () => {\n    const billFloat = parseFloat(bill);\n    const tipLowFloat = parseFloat(tipLow);\n    const tipHighFloat = parseFloat(tipHigh);\n\n    if (\n      billFloat &&\n      tipLowFloat &&\n      tipHighFloat &&\n      tipLowFloat <= tipHighFloat\n    ) {\n      const tipArray = findPalTips(billFloat, tipLowFloat, tipHighFloat);\n      const allTotalArray = arrayTipsAndTotals(billFloat, tipArray);\n      const palTotalArray = findPalTotals(billFloat, tipArray);\n\n      console.log(allTotalArray);\n\n      if (palTotalArray && palTotalArray.length > 0) {\n        //both tip & total are arrays\n        palTotalArray.length > 1\n          ? setMessage(\n              \"Woot! There are \" +\n                palTotalArray.length +\n                \" ways for the tip AND total to be palindromes!\"\n            )\n          : setMessage(\n              \"Woot! There is one way for the tip AND total to be palindromes!\"\n            );\n        return palTotalArray;\n      } else if (tipArray && tipArray.length > 0) {\n        tipArray.length > 1\n          ? setMessage(\"You can tip in \" + tipArray.length + \" palindromes!\")\n          : setMessage(\"You can tip in one palindrome!\");\n        return allTotalArray;\n      } else {\n        console.log(\"no results\");\n        setMessage(\"Sorry, no results.\");\n        return [];\n      }\n    }\n  };\n\n  useEffect(() => {\n    setResults(findResults);\n    // eslint-disable-next-line\n  }, [bill, tipLow, tipHigh]);\n\n  return (\n    <div\n      style={{\n        marginLeft: 5,\n        marginRight: 5,\n        backgroundColor: colors.background,\n      }}\n    >\n      <div className={styles.inputRow}>\n        <div style={{ textAlign: \"left\" }}>\n          <label\n            htmlFor=\"bill\"\n            name=\"bill\"\n            id=\"bill\"\n            aria-label=\"Bill amount\"\n            className={styles.label}\n          >\n            Your Bill:\n          </label>\n          <div className={styles.helper}>Pre-tip amount</div>\n        </div>\n        <CurrencyInput\n          id=\"bill\"\n          label=\"Bill\"\n          value={bill}\n          onChange={handleBill}\n        />\n      </div>\n      <div className={styles.inputRow} style={{ marginTop: 20 }}>\n        <div style={{ textAlign: \"left\" }}>\n          <div className={styles.label}>Tip Range:</div>\n          <div className={styles.helper}>Low to high</div>\n        </div>\n        <div className={styles.inputGroup}>\n          <PercentInput\n            id=\"Tip percentage low\"\n            value={context.defaultTipLow}\n            onChange={handleTipLow}\n          />\n          <div className={styles.normalText} style={{ paddingRight: 5 }}>\n            to\n          </div>\n          <PercentInput\n            id=\"Tip percentage high\"\n            value={context.defaultTipHigh}\n            onChange={handleTipHigh}\n          />\n        </div>\n      </div>\n      <React.Fragment>\n        {/* If there are results, print the message and clear button. */}\n        <div\n          style={{\n            minHeight: 50,\n            paddingTop: 10,\n            display: \"flex\",\n            alignItems: \"flex-end\",\n          }}\n        >\n          {results && (\n            <div\n              className={styles.inputRow}\n              style={{ width: \"100%\", alignItems: \"flex-end\" }}\n            >\n              <div className={styles.normalText} style={{ textAlign: \"left\" }}>\n                {message}\n              </div>\n              <button\n                onClick={clearAll}\n                className={styles.clearButton}\n                aria-label=\"Clear button\"\n                style={{ padding: 10, color: colors.clear }}\n              >\n                X Clear\n              </button>\n            </div>\n          )}\n        </div>\n      </React.Fragment>\n      <React.Fragment>\n        <div>\n          <Dashes />\n          {/* If there are results, print the results table. */}\n          {results?.length > 0 && <Results results={results} />}\n        </div>\n      </React.Fragment>\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport const LabsLogo = () => {\n  return (\n    <svg\n      id=\"logo\"\n      height=\"110\"\n      viewBox=\"0 0 573 345\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <rect\n        className=\"background\"\n        width=\"573\"\n        height=\"344\"\n        transform=\"translate(0 0.390137)\"\n      />\n      <path\n        className=\"text text--main\"\n        d=\"M366.436 113.014V161.879C366.436 163.354 365.33 164.461 363.855 164.461H347.812C346.337 164.461 345.23 163.354 345.23 161.879V159.851C340.252 163.907 333.798 166.305 326.606 166.305C310.933 166.305 298.578 155.056 298.578 140.305C298.578 125.368 310.933 114.12 326.606 114.12C333.245 114.12 339.145 116.149 343.94 119.652V113.014C343.94 106.744 339.883 102.688 333.798 102.688C329.188 102.688 325.869 104.716 324.394 108.22C324.025 109.326 322.918 110.064 321.628 110.064H304.848C302.819 110.064 301.344 108.22 301.897 106.191C305.585 93.099 317.387 84.0636 333.982 84.0636C352.791 84.248 366.436 96.0494 366.436 113.014ZM343.94 140.489C343.94 135.51 338.961 131.454 332.691 131.454C326.606 131.454 321.628 135.51 321.628 140.489C321.628 145.468 326.606 149.34 332.691 149.34C339.145 149.34 343.94 145.283 343.94 140.489ZM470.067 140.673H484.819C486.479 140.673 488.138 141.78 488.691 143.439C489.798 146.39 492.933 148.603 496.436 148.603C500.677 148.603 504.181 146.021 504.181 142.517C504.181 137.539 498.096 135.326 491.642 133.851C479.84 131.085 466.933 125.184 466.933 108.957C466.933 92.9146 480.578 84.248 496.067 84.248C511.003 84.248 522.62 92.7302 525.018 104.163C525.571 106.56 523.727 108.957 521.33 108.957H506.025C504.55 108.957 503.259 108.22 502.706 106.744C501.784 104.163 499.202 102.134 495.883 102.134C492.195 102.134 489.245 104.532 489.245 107.482C489.245 111.908 494.592 114.305 502.337 116.149C514.138 119.099 526.677 124.631 526.677 140.489C526.677 156.9 513.032 166.305 496.436 166.305C480.762 166.305 468.777 157.269 466.379 145.283C465.826 143.071 467.67 140.673 470.067 140.673ZM295.628 145.099V161.51C295.628 163.17 294.337 164.461 292.677 164.461H241.415C239.755 164.461 238.465 163.17 238.465 161.51V61.5671C238.465 59.9075 239.755 58.6168 241.415 58.6168H259.301C260.961 58.6168 262.252 59.9075 262.252 61.5671V142.149H292.677C294.337 142.149 295.628 143.439 295.628 145.099ZM462.323 125.368C462.323 148.787 446.28 166.305 424.521 166.305C414.933 166.305 406.635 162.248 400.918 155.794V160.588C400.918 162.801 399.074 164.461 397.046 164.461H382.479C380.266 164.461 378.606 162.617 378.606 160.588V57.8792C378.606 55.6664 380.45 54.0068 382.479 54.0068H397.046C399.259 54.0068 400.918 55.8508 400.918 57.8792V94.943C406.819 88.3047 414.933 84.4324 424.521 84.4324C446.28 84.248 462.323 101.95 462.323 125.368ZM439.273 125.368C439.273 114.305 431.16 106.007 420.096 106.007C409.032 106.007 400.918 114.305 400.918 125.368C400.918 136.432 409.032 144.73 420.096 144.73C431.16 144.73 439.273 136.432 439.273 125.368Z\"\n      />\n      <path\n        className=\"text text--tag\"\n        d=\"M238.465 216.829L248.053 190.092H252.663L262.252 216.829H258.011L255.614 209.822H245.103L242.706 216.829H238.465ZM254.323 206.319L250.45 194.886H250.266L246.394 206.319H254.323ZM275.713 196.73H279.585V200.049H279.954C280.691 198.759 281.982 196.546 285.67 196.546C290.465 196.546 294.152 200.418 294.152 206.872C294.152 213.326 290.649 217.198 285.67 217.198C281.982 217.198 280.507 214.985 279.77 213.695H279.585V224.39H275.713V196.73ZM284.748 213.879C288.252 213.879 290.096 210.744 290.096 206.688C290.096 202.631 288.252 199.681 284.748 199.681C281.245 199.681 279.585 202.446 279.585 206.688C279.585 210.929 281.429 213.879 284.748 213.879ZM302.266 216.829H298.394V190.092H302.266V216.829ZM306.691 211.113C306.691 206.503 310.564 205.581 314.436 205.028C318.124 204.659 319.599 204.659 319.599 203.184C319.599 200.971 318.309 199.496 315.727 199.496C313.145 199.496 311.67 200.787 311.117 202.262L307.429 201.34C308.72 197.652 312.039 196.177 315.727 196.177C318.862 196.177 323.472 197.283 323.472 203.184V216.461H319.599V213.695H319.415C318.677 215.17 316.833 216.829 313.514 216.829C309.642 217.198 306.691 214.985 306.691 211.113ZM319.415 209.638V207.056C318.862 207.61 315.911 207.978 314.621 208.163C312.408 208.532 310.564 209.269 310.564 211.298C310.564 213.142 312.223 214.248 314.436 214.248C317.571 214.063 319.415 211.851 319.415 209.638ZM327.713 206.872C327.713 200.787 331.401 196.546 337.117 196.546C341.727 196.546 345.046 199.312 345.415 203.368H341.543C341.174 201.524 339.514 199.865 337.117 199.865C333.798 199.865 331.585 202.631 331.585 206.872C331.585 211.298 333.798 214.063 337.117 214.063C339.33 214.063 340.989 212.773 341.543 210.56H345.415C345.046 214.432 341.911 217.383 337.117 217.383C331.216 217.198 327.713 212.957 327.713 206.872ZM348.734 206.872C348.734 200.787 352.422 196.361 357.954 196.361C362.564 196.361 366.805 199.127 366.805 206.503V207.978H352.606C352.791 211.851 355.004 214.063 358.323 214.063C360.535 214.063 362.195 213.142 362.933 211.113L366.621 211.851C365.699 215.17 362.564 217.198 358.323 217.198C352.238 217.198 348.734 213.141 348.734 206.872ZM362.933 205.028C362.933 201.893 360.904 199.681 357.954 199.681C354.819 199.681 352.791 202.078 352.606 205.028H362.933ZM390.592 199.865H386.351V216.829H382.479V199.865H379.344V196.73H382.479V194.333C382.479 190.645 385.245 188.617 388.379 188.617C390.039 188.617 391.145 188.985 391.699 189.17L390.777 192.305C390.408 192.12 389.855 191.936 388.933 191.936C387.089 191.936 386.351 192.858 386.351 194.702V196.546H390.592V199.865ZM392.805 206.872C392.805 200.602 396.493 196.546 402.209 196.546C407.925 196.546 411.613 200.602 411.613 206.872C411.613 213.141 407.925 217.198 402.209 217.198C396.493 217.198 392.805 213.141 392.805 206.872ZM407.741 206.872C407.741 203 406.082 199.681 402.394 199.681C398.706 199.681 397.046 203 397.046 206.872C397.046 210.744 398.706 213.879 402.394 213.879C405.897 213.879 407.741 210.744 407.741 206.872ZM416.039 196.73H419.911V199.865H420.096C420.833 197.652 422.862 196.361 425.259 196.361C425.812 196.361 426.55 196.361 426.918 196.361V200.049C426.55 200.049 425.628 199.865 424.89 199.865C422.124 199.865 420.096 201.709 420.096 204.475V216.829H416.223V196.73H416.039ZM239.202 243.751C239.202 237.666 242.89 233.241 248.422 233.241C253.032 233.241 257.273 236.007 257.273 243.383V244.858H243.074C243.259 248.73 245.472 250.943 248.791 250.943C251.004 250.943 252.663 250.021 253.401 247.993L257.089 248.73C256.167 252.049 253.032 254.078 248.791 254.078C242.89 254.078 239.202 250.021 239.202 243.751ZM253.585 241.907C253.585 238.773 251.557 236.56 248.606 236.56C245.472 236.56 243.443 238.957 243.259 241.907H253.585ZM268.89 241.354L273.316 233.61H277.557L271.287 243.567L277.557 253.524H273.316L268.706 245.964L264.28 253.524H260.039L266.309 243.567L260.223 233.61H264.465L268.89 241.354ZM281.613 233.61H285.486V236.929H285.855C286.592 235.638 287.883 233.425 291.571 233.425C296.365 233.425 300.053 237.298 300.053 243.751C300.053 250.205 296.55 254.078 291.571 254.078C287.883 254.078 286.408 251.865 285.67 250.574H285.486V261.269H281.613V233.61ZM290.649 250.759C294.152 250.759 295.996 247.624 295.996 243.567C295.996 239.51 294.152 236.56 290.649 236.56C287.145 236.56 285.486 239.326 285.486 243.567C285.486 247.808 287.33 250.759 290.649 250.759ZM303.557 243.751C303.557 237.666 307.245 233.241 312.777 233.241C317.387 233.241 321.628 236.007 321.628 243.383V244.858H307.429C307.613 248.73 309.826 250.943 313.145 250.943C315.358 250.943 317.018 250.021 317.755 247.993L321.443 248.73C320.521 252.049 317.387 254.078 313.145 254.078C307.06 254.078 303.557 250.021 303.557 243.751ZM317.755 241.907C317.755 238.773 315.727 236.56 312.777 236.56C309.642 236.56 307.613 238.957 307.429 241.907H317.755ZM326.053 233.61H329.926V236.744H330.11C330.847 234.532 332.876 233.241 335.273 233.241C335.826 233.241 336.564 233.241 336.933 233.241V236.929C336.564 236.929 335.642 236.744 334.904 236.744C332.138 236.744 330.11 238.588 330.11 241.354V253.709H326.238V233.61H326.053ZM339.699 228.078C339.699 226.787 340.805 225.681 342.096 225.681C343.386 225.681 344.493 226.787 344.493 228.078C344.493 229.368 343.386 230.475 342.096 230.475C340.805 230.475 339.699 229.368 339.699 228.078ZM340.252 233.61H344.124V253.709H340.252V233.61ZM349.472 233.61H353.16V236.929H353.344C354.266 234.716 356.11 233.425 358.876 233.425C361.642 233.425 363.486 234.716 364.223 236.929H364.408C365.33 234.716 367.543 233.425 370.493 233.425C374.181 233.425 376.762 235.638 376.762 240.248V253.709H372.706V240.617C372.706 237.851 371.046 236.744 369.018 236.744C366.436 236.744 364.961 238.588 364.961 240.985V253.709H361.089V240.432C361.089 238.22 359.613 236.744 357.401 236.744C355.188 236.744 353.344 238.588 353.344 241.354V253.709H349.472V233.61ZM381.004 243.751C381.004 237.666 384.691 233.241 390.223 233.241C394.833 233.241 399.074 236.007 399.074 243.383V244.858H384.876C385.06 248.73 387.273 250.943 390.592 250.943C392.805 250.943 394.464 250.021 395.202 247.993L398.89 248.73C397.968 252.049 394.833 254.078 390.592 254.078C384.691 254.078 381.004 250.021 381.004 243.751ZM395.386 241.907C395.386 238.773 393.358 236.56 390.408 236.56C387.273 236.56 385.245 238.957 385.06 241.907H395.386ZM407.557 253.709H403.684V233.61H407.372V236.929H407.557C408.479 234.716 410.507 233.425 413.457 233.425C417.514 233.425 420.28 236.007 420.28 240.985V253.709H416.408V241.354C416.408 238.404 414.748 236.744 412.167 236.744C409.401 236.744 407.557 238.588 407.557 241.723V253.709ZM435.032 236.744H430.975V247.808C430.975 250.021 432.081 250.574 433.372 250.574C433.925 250.574 434.479 250.39 434.663 250.39L435.401 253.709C435.032 253.893 434.11 254.078 432.819 254.078C429.684 254.078 426.918 252.418 426.918 248.73V236.929H423.968V233.794H426.918V229H430.791V233.794H434.847V236.744H435.032ZM438.351 247.993C438.351 243.383 442.223 242.461 446.096 241.907C449.784 241.539 451.259 241.539 451.259 240.063C451.259 237.851 449.968 236.376 447.386 236.376C444.805 236.376 443.33 237.666 442.777 239.141L439.089 238.219C440.379 234.532 443.699 233.056 447.386 233.056C450.521 233.056 455.131 234.163 455.131 240.063V253.34H451.259V250.574H451.074C450.337 252.049 448.493 253.709 445.174 253.709C441.486 254.078 438.351 251.865 438.351 247.993ZM451.259 246.517V243.936C450.706 244.489 447.755 244.858 446.464 245.042C444.252 245.411 442.408 246.149 442.408 248.177C442.408 250.021 444.067 251.127 446.28 251.127C449.415 250.943 451.259 248.73 451.259 246.517ZM469.699 236.744H465.642V247.808C465.642 250.021 466.748 250.574 468.039 250.574C468.592 250.574 469.145 250.39 469.33 250.39L470.067 253.709C469.699 253.893 468.777 254.078 467.486 254.078C464.351 254.078 461.585 252.418 461.585 248.73V236.929H458.635V233.794H461.585V229H465.457V233.794H469.514V236.744H469.699ZM473.571 228.078C473.571 226.787 474.677 225.681 475.968 225.681C477.259 225.681 478.365 226.787 478.365 228.078C478.365 229.368 477.259 230.475 475.968 230.475C474.677 230.475 473.571 229.368 473.571 228.078ZM474.124 233.61H477.996V253.709H474.124V233.61ZM482.422 243.751C482.422 237.482 486.11 233.425 491.826 233.425C497.542 233.425 501.23 237.482 501.23 243.751C501.23 250.021 497.542 254.078 491.826 254.078C486.11 254.078 482.422 250.021 482.422 243.751ZM497.174 243.751C497.174 239.879 495.514 236.56 491.826 236.56C488.138 236.56 486.479 239.879 486.479 243.751C486.479 247.624 488.138 250.759 491.826 250.759C495.33 250.759 497.174 247.624 497.174 243.751ZM509.344 253.709H505.472V233.61H509.159V236.929H509.344C510.266 234.716 512.294 233.425 515.245 233.425C519.301 233.425 522.067 236.007 522.067 240.985V253.709H518.379V241.354C518.379 238.404 516.72 236.744 514.138 236.744C511.372 236.744 509.528 238.588 509.528 241.723V253.709H509.344ZM239.202 284.872C239.202 280.262 243.075 279.34 246.947 278.787C250.635 278.418 252.11 278.418 252.11 276.943C252.11 274.73 250.819 273.255 248.238 273.255C245.656 273.255 244.181 274.546 243.628 276.021L239.94 275.099C241.231 271.411 244.55 269.936 248.238 269.936C251.372 269.936 255.982 271.042 255.982 276.943V290.219H252.11V287.454H251.926C251.188 288.929 249.344 290.588 246.025 290.588C242.153 290.957 239.202 288.744 239.202 284.872ZM251.926 283.397V280.815C251.372 281.368 248.422 281.737 247.131 281.922C244.918 282.29 243.074 283.028 243.074 285.056C243.074 286.9 244.734 288.007 246.947 288.007C250.082 287.822 251.926 285.61 251.926 283.397ZM270.55 273.624H266.493V284.688C266.493 286.9 267.599 287.454 268.89 287.454C269.443 287.454 269.996 287.269 270.181 287.269L270.918 290.588C270.55 290.773 269.628 290.957 268.337 290.957C265.202 290.957 262.436 289.297 262.436 285.61V273.808H259.486V270.673H262.436V265.879H266.309V270.673H270.365V273.624H270.55ZM293.968 266.801C290.649 266.801 288.621 268.461 288.621 270.858C288.621 273.439 291.387 274.361 293.415 274.915L295.996 275.652C299.316 276.574 303.741 278.418 303.741 283.212C303.741 287.822 300.053 291.141 293.784 291.141C287.699 291.141 284.011 288.191 283.826 283.212H287.883C288.067 286.163 290.649 287.454 293.784 287.454C297.287 287.454 299.684 285.794 299.684 283.028C299.684 280.631 297.472 279.709 294.521 278.971L291.387 278.049C287.145 276.943 284.379 274.73 284.379 271.042C284.379 266.432 288.436 263.298 293.968 263.298C299.5 263.298 303.188 266.432 303.372 270.673H299.5C299.131 268.276 297.103 266.801 293.968 266.801ZM307.429 284.872C307.429 280.262 311.301 279.34 315.174 278.787C318.862 278.418 320.337 278.418 320.337 276.943C320.337 274.73 319.046 273.255 316.465 273.255C313.883 273.255 312.408 274.546 311.855 276.021L308.167 275.099C309.457 271.411 312.777 269.936 316.465 269.936C319.599 269.936 324.209 271.042 324.209 276.943V290.219H320.337V287.454H320.152C319.415 288.929 317.571 290.588 314.252 290.588C310.379 290.957 307.429 288.744 307.429 284.872ZM320.152 283.397V280.815C319.599 281.368 316.649 281.737 315.358 281.922C313.145 282.29 311.301 283.028 311.301 285.056C311.301 286.9 312.961 288.007 315.174 288.007C318.309 287.822 320.152 285.61 320.152 283.397ZM338.408 290.588H334.167L326.791 270.489H331.032L336.195 285.978H336.379L341.543 270.489H345.784L338.408 290.588ZM347.812 284.872C347.812 280.262 351.684 279.34 355.557 278.787C359.245 278.418 360.72 278.418 360.72 276.943C360.72 274.73 359.429 273.255 356.847 273.255C354.266 273.255 352.791 274.546 352.238 276.021L348.55 275.099C349.84 271.411 353.16 269.936 356.847 269.936C359.982 269.936 364.592 271.042 364.592 276.943V290.219H360.72V287.454H360.535C359.798 288.929 357.954 290.588 354.635 290.588C350.947 290.957 347.812 288.744 347.812 284.872ZM360.72 283.397V280.815C360.167 281.368 357.216 281.737 355.925 281.922C353.713 282.29 351.869 283.028 351.869 285.056C351.869 286.9 353.528 288.007 355.741 288.007C358.876 287.822 360.72 285.61 360.72 283.397ZM381.372 276.021C381.003 274.73 379.713 273.255 377.316 273.255C375.103 273.255 373.443 274.361 373.443 275.837C373.443 277.127 374.365 277.865 376.578 278.418L379.713 279.156C383.401 280.078 385.245 281.737 385.245 284.688C385.245 288.375 381.925 290.957 376.947 290.957C372.521 290.957 369.386 288.929 368.833 285.425L372.706 284.872C373.259 286.9 374.734 287.822 376.947 287.822C379.528 287.822 381.188 286.532 381.188 285.056C381.188 283.766 380.266 283.028 378.422 282.475L375.103 281.737C371.415 280.815 369.571 278.971 369.571 276.205C369.571 272.702 372.706 270.305 377.316 270.305C381.741 270.305 384.138 272.333 384.876 275.468L381.372 276.021ZM399.628 263.851H403.684V287.085H415.855V290.588H399.628V263.851ZM419.174 284.872C419.174 280.262 423.046 279.34 426.918 278.787C430.606 278.418 432.081 278.418 432.081 276.943C432.081 274.73 430.791 273.255 428.209 273.255C425.628 273.255 424.152 274.546 423.599 276.021L419.911 275.099C421.202 271.411 424.521 269.936 428.209 269.936C431.344 269.936 435.954 271.042 435.954 276.943V290.219H432.081V287.454H431.897C431.16 288.929 429.316 290.588 425.996 290.588C422.124 290.957 419.174 288.744 419.174 284.872ZM432.081 283.397V280.815C431.528 281.368 428.578 281.737 427.287 281.922C425.074 282.29 423.23 283.028 423.23 285.056C423.23 286.9 424.89 288.007 427.103 288.007C430.053 287.822 432.081 285.61 432.081 283.397ZM441.486 263.851H445.358V273.808H445.542C446.28 272.517 447.571 270.305 451.259 270.305C456.053 270.305 459.741 274.177 459.741 280.631C459.741 287.085 456.238 290.957 451.259 290.957C447.571 290.957 446.096 288.744 445.358 287.454H444.989V290.588H441.117V263.851H441.486ZM450.521 287.638C454.025 287.638 455.869 284.503 455.869 280.446C455.869 276.39 454.025 273.439 450.521 273.439C447.018 273.439 445.358 276.205 445.358 280.446C445.358 284.688 447.202 287.638 450.521 287.638ZM475.784 276.021C475.415 274.73 474.124 273.255 471.727 273.255C469.514 273.255 467.855 274.361 467.855 275.837C467.855 277.127 468.777 277.865 470.989 278.418L474.124 279.156C477.812 280.078 479.656 281.737 479.656 284.688C479.656 288.375 476.337 290.957 471.358 290.957C466.933 290.957 463.798 288.929 463.245 285.425L467.117 284.872C467.67 286.9 469.145 287.822 471.358 287.822C473.94 287.822 475.599 286.532 475.599 285.056C475.599 283.766 474.677 283.028 472.833 282.475L469.514 281.737C465.826 280.815 463.982 278.971 463.982 276.205C463.982 272.702 467.117 270.305 471.727 270.305C476.152 270.305 478.55 272.333 479.287 275.468L475.784 276.021Z\"\n      />\n      <path\n        className=\"ava-outline\"\n        fill-rule=\"evenodd\"\n        clip-rule=\"evenodd\"\n        d=\"M217.812 100.085V127.929H217.443V132.17C217.443 146 213.94 159.645 207.67 171.815C214.124 183.986 217.443 197.631 217.443 211.461V286.879C217.443 292.596 212.833 297.39 206.933 297.39H197.713C183.145 297.39 168.947 294.624 155.67 288.908C154.564 288.354 153.274 287.801 151.983 287.248L151.982 287.248C151.982 287.432 151.936 287.617 151.89 287.801C151.844 287.986 151.798 288.17 151.798 288.354C150.876 292.78 147.372 296.099 142.762 296.652C139.075 297.205 135.571 297.39 131.883 297.39C108.465 297.39 86.337 287.801 70.2944 271.205L70.11 271.39L65.5001 265.674L61.8122 261.064L61.9966 260.879C51.8547 246.496 46.3228 229.163 46.3228 211.461C46.3228 197.631 49.642 184.17 55.9115 172C49.642 159.83 46.3228 146.184 46.3228 132.354V127.929V100.085C46.3228 95.6595 49.8264 92.1559 54.2519 92.3403H56.2803C58.8618 87.1772 62.181 82.5673 65.6845 78.1418L57.2022 67.9999C54.8051 65.234 54.2519 61.3616 55.9115 58.0425C57.3866 54.7233 60.5214 52.695 64.2093 52.695H88.5497C95.3724 52.695 102.011 51.773 108.465 49.929C116.025 47.7162 123.954 46.6099 132.067 46.6099C140.181 46.6099 148.11 47.7162 155.67 50.1134C162.124 51.9574 168.762 52.8794 175.585 52.8794H200.11C203.614 52.8794 206.933 54.9077 208.408 58.2269C210.067 61.3616 209.514 65.234 207.117 67.9999L205.273 70.2127L198.45 78.1418C201.954 82.3829 205.089 87.1772 207.855 92.1559H209.883C214.309 92.1559 217.812 95.6595 217.812 100.085Z\"\n      />\n      <path\n        className=\"ava\"\n        d=\"M62.181 63.9647C60.7058 62.3051 61.9966 59.7235 64.2093 59.7235H88.5497C95.9256 59.7235 103.117 58.8015 110.124 56.7732C117.131 54.7448 124.323 53.6384 132.067 53.6384C139.812 53.6384 147.004 54.7448 154.011 56.7732C161.018 58.8015 168.394 59.7235 175.585 59.7235H199.926C202.138 59.7235 203.429 62.3051 201.954 64.1491L191.997 75.9505C190.706 77.4256 190.706 79.6384 191.997 81.1136C195.5 85.1703 198.635 89.5959 201.216 94.2058C194.762 85.5391 184.436 80.1916 173.372 80.1916H91.1313C79.3299 80.1916 68.2661 86.2767 61.9966 96.2341C64.7625 90.8866 68.2661 85.7235 72.3228 81.1136C73.6136 79.6384 73.6136 77.4256 72.3228 75.9505L62.181 63.9647ZM124.323 110.617C124.323 103.426 118.422 97.3405 111.046 97.3405C103.67 97.3405 97.954 103.241 97.954 110.617C97.954 117.993 103.855 123.894 111.231 123.894C118.606 123.894 124.323 117.809 124.323 110.617ZM152.904 123.709C145.713 123.709 139.628 117.809 139.628 110.433C139.628 103.057 145.528 97.1561 152.904 97.1561C160.28 97.1561 166.181 103.057 166.181 110.433C166.181 117.809 160.28 123.709 152.904 123.709ZM79.3299 211.851C79.3299 182.716 102.933 159.114 132.067 159.114C161.202 159.114 184.805 182.716 184.805 211.851V263.298C169.869 260.532 155.855 253.525 144.975 242.645C130.777 228.447 122.848 209.454 122.848 189.355C122.848 183.27 123.585 177.369 124.876 171.653C125.614 168.887 123.032 166.305 120.266 167.043C113.443 168.887 106.989 172.206 101.642 177C101.273 177.369 100.904 177.738 100.536 178.106C98.1384 180.319 96.6632 183.638 96.6632 186.958C96.6632 187.695 96.6632 188.433 96.6632 189.355C96.6632 203 99.4292 216.277 104.592 228.816C109.755 240.986 116.947 251.681 126.351 261.085C135.755 270.489 146.45 277.681 158.621 282.844C171.16 288.191 184.436 290.773 198.082 290.773H207.301C209.514 290.773 211.174 288.929 211.174 286.901V211.851C211.174 197.468 207.301 184.007 200.479 172.206C207.301 160.589 211.174 147.128 211.174 132.56V132.376C210.805 132.56 210.252 132.56 209.883 132.56H202.876C196.606 142.887 185.358 149.156 173.372 149.156C163.415 149.156 154.011 144.731 147.372 137.355C146.082 136.064 144.606 134.773 143.131 133.851C142.394 134.22 141.472 134.589 140.919 135.326L132.252 145.653L123.585 135.326C123.032 134.773 122.294 134.22 121.557 133.851C119.897 134.773 118.422 136.064 117.131 137.539C114.55 140.489 111.415 142.887 107.911 144.915C102.933 147.681 97.2164 149.156 91.5001 149.156C79.3299 149.156 68.0817 142.887 61.8122 132.56H54.4363C53.8831 132.56 53.5143 132.376 53.1455 132.376V132.56C53.1455 146.943 57.0178 160.589 63.8405 172.206C57.0178 183.823 53.1455 197.284 53.1455 211.667C53.1455 230.66 59.7838 247.993 71.032 261.638C85.5994 279.34 107.543 290.773 132.252 290.773C135.755 290.773 139.075 290.589 142.394 290.22C146.082 289.667 147.188 284.872 143.869 282.844C135.755 278.234 128.38 272.518 121.741 265.695C119.897 263.851 117.684 262.376 115.103 261.454C105.514 258.135 97.032 252.05 90.7625 244.121C83.571 235.454 79.3299 224.206 79.3299 211.851Z\"\n      />\n      <mask\n        id=\"mask0\"\n        mask-type=\"alpha\"\n        maskUnits=\"userSpaceOnUse\"\n        x=\"62\"\n        y=\"85\"\n        width=\"141\"\n        height=\"59\"\n      >\n        <path\n          className=\"no-glare\"\n          d=\"M173.188 143.624C164.89 143.624 157.33 140.121 151.614 133.851C146.635 128.504 139.628 125.369 132.252 125.369C124.876 125.369 117.684 128.504 112.706 134.035C102.011 145.837 83.7554 146.759 71.954 136.064C60.1526 125.369 59.2306 107.113 69.9256 95.312C75.4576 89.2269 83.2022 85.7234 91.3157 85.7234H173.372C189.231 85.7234 202.323 98.6312 202.323 114.674C202.138 130.532 189.231 143.624 173.188 143.624Z\"\n        />\n      </mask>\n      <g mask=\"url(#mask0)\">\n        <path\n          className=\"glare\"\n          d=\"M225.465 83.1421L162.401 146.205H55.174L118.237 83.1421H225.465Z\"\n          fill=\"white\"\n        />\n        <path\n          className=\"glare\"\n          d=\"M110.081 83.1426L47.0176 146.206H26.3089L89.3721 83.1426H110.081Z\"\n        />\n      </g>\n      <path\n        className=\"goggles\"\n        d=\"M209.883 99.1846H200.848C195.316 89.2272 184.805 83.1421 173.372 83.1421H91.1313C79.6987 83.1421 69.1881 89.2272 63.6561 99.1846H54.2519C53.5143 99.1846 52.9611 99.7378 52.9611 100.475V128.319C52.9611 129.057 53.5143 129.61 54.2519 129.61H63.2874C71.5852 144.915 90.7625 150.631 106.067 142.334C109.202 140.674 112.153 138.277 114.55 135.695C118.975 130.717 125.429 127.951 132.067 127.951C138.706 127.951 144.975 130.717 149.401 135.511C155.486 142.334 163.968 146.206 173.188 146.206C184.805 146.206 195.5 139.752 201.032 129.61H209.883C210.621 129.61 211.174 129.057 211.174 128.319V100.475C211.174 99.7378 210.621 99.1846 209.883 99.1846ZM173.188 143.624C164.89 143.624 157.33 140.121 151.614 133.851C146.635 128.504 139.628 125.369 132.252 125.369C124.876 125.369 117.684 128.504 112.706 134.036C102.011 145.837 83.7554 146.759 71.954 136.064C60.1526 125.369 59.2306 107.114 69.9257 95.3123C75.4576 89.2272 83.2022 85.7236 91.3157 85.7236H173.372C189.231 85.7236 202.323 98.6314 202.323 114.674C202.323 130.717 189.231 143.624 173.188 143.624Z\"\n      />\n    </svg>\n  );\n};\n","import React, { useContext, useState } from \"react\";\nimport AppContext from \"./AppContext\";\nimport { Header } from \"./Header\";\nimport { Calculator } from \"./Calculator\";\nimport { Footer } from \"./Footer\";\nimport { LabsLogo } from \"./LabsLogo\";\n\nexport const Landing = () => {\n  const context = useContext(AppContext);\n  const { colors } = context.useTheme();\n\n  // Simulate a focus state for the dark mode toggle.\n  const [stroke, setStroke] = useState(\"none\");\n  const handleToggleFocus = () => {\n    stroke === \"none\" ? setStroke(\"lightgray\") : setStroke(\"none\");\n  };\n\n  // Initiate the background digit animation.\n  const canvasRef = React.useRef(null);\n  const [canvasContext, setCanvasContext] = React.useState(null);\n\n  React.useEffect(() => {\n    if (canvasRef.current) {\n      const ctx = canvasRef.current.getContext(\"2d\");\n\n      ctx.canvas.width = window.innerWidth;\n      ctx.canvas.height = window.innerHeight;\n\n      ctx.font = \"20px JetBrains Mono\";\n      ctx.fillStyle = \"rgba(102, 199, 112, .08)\";\n\n      const fontSize = 21;\n      const columns = Math.floor(ctx.canvas.width / fontSize);\n      const rows = Math.floor(ctx.canvas.height / fontSize);\n\n      const binChars = [\"0\", \"1\"];\n      const bits = [];\n      const bitHeight = fontSize;\n      const bitWidth = fontSize;\n\n      // Populate array of 'bits'\n      for (let r = 0; r < rows; r++) {\n        for (let c = 0; c < columns; c++) {\n          bits.push({\n            x: c * bitWidth,\n            y: r * bitHeight,\n            value: binChars[Math.floor(Math.random() * binChars.length)],\n            hasDrawn: false,\n          });\n        }\n      }\n\n      // Vars for manually calculating frame rate\n      const fps = 10;\n      const interval = 1000 / fps;\n      let now;\n      let then = Date.now();\n      let delta;\n\n      // Draw all bits once before starting animation\n      for (let bit of bits) {\n        ctx.clearRect(bit.x, bit.y, bitWidth, bitHeight);\n        ctx.fillText(bit.value, bit.x, bit.y + bitHeight);\n        bit.hasDrawn = true;\n      }\n\n      function draw() {\n        const raf = window.requestAnimationFrame(draw);\n        now = Date.now();\n        delta = now - then;\n\n        if (delta > interval) {\n          for (let bit of bits) {\n            if (bit.hasDrawn === true && Math.random() * 100 > 95) {\n              // If passes the randomness check\n              let newVal =\n                bit.value === binChars[1] ? binChars[0] : binChars[1];\n\n              ctx.clearRect(bit.x, bit.y, bitWidth, bitHeight);\n              ctx.fillText(newVal, bit.x, bit.y + bitHeight);\n              bit.value = newVal;\n            }\n          }\n          then = now - (delta % interval);\n        }\n      }\n      draw();\n\n      if (ctx) {\n        setCanvasContext(ctx);\n      }\n    }\n  }, [canvasContext]);\n\n  return (\n    <>\n      <main className=\"main\">\n        <div className=\"container h-100\">\n          <div className=\"row h-100 justify-space-between\">\n            <div className=\"col-lg-7 my-auto\">\n              <h1 className=\"my-4\">tipit</h1>\n              <p className=\"main__text pb-4\">\n                Why leave boring tip amounts when you can tip in palindrome?\n                Excellent question! Tipit quickly calculates gratuity that will\n                add a little bit of numerical fun to your next bill.\n              </p>\n              <div className=\"row w-100 my-auto justify-content-between\">\n                <div className=\"col-lg-6 highlight__text my-auto\">\n                  Coming Soon to the <br />\n                  App Store & Google Play\n                </div>\n                <div className=\"col-lg m-auto\">\n                  <div className=\"toggle__wrapper\">\n                    <input\n                      className=\"toggle-input\"\n                      id=\"toggle-input\"\n                      type=\"checkbox\"\n                      onChange={context.toggleTheme}\n                      checked={context.theme === \"dark\"}\n                      aria-label=\"Dark mode toggle\"\n                      onFocus={handleToggleFocus}\n                      onBlur={handleToggleFocus}\n                    />\n                    <svg\n                      className=\"toggle\"\n                      width=\"226\"\n                      height=\"78\"\n                      viewBox=\"0 0 226 78\"\n                      fill=\"none\"\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                    >\n                      <g filter=\"url(#filter0_d)\">\n                        <rect\n                          x=\"10\"\n                          y=\"8\"\n                          width=\"206\"\n                          height=\"58\"\n                          rx=\"29\"\n                          fill=\"white\"\n                          stroke={stroke}\n                          stroke-width=\"4\"\n                        />\n                      </g>\n                      <rect\n                        className=\"shade\"\n                        x=\"10\"\n                        y=\"8\"\n                        width=\"110\"\n                        height=\"58\"\n                        rx=\"29\"\n                      />\n                      <path\n                        className=\"moon\"\n                        d=\"M179.375 39.4758C178.846 39.0617 178.119 39.0156 177.542 39.3592C172.389 42.4321 165.821 41.6171 161.57 37.3775C157.325 33.1437 156.508 26.6033 159.583 21.4724C159.929 20.8956 159.886 20.1648 159.476 19.6327C159.065 19.1004 158.37 18.876 157.727 19.0675C154.911 19.9053 152.318 21.4498 150.228 23.5342C146.857 26.8968 145 31.3682 145 36.1247C145 40.8813 146.857 45.3526 150.228 48.715C153.705 52.1831 158.272 53.9167 162.839 53.9163C163.571 53.9162 164.303 53.8711 165.031 53.7819C166.049 53.5061 167.083 53.2854 168.125 53.1211C170.807 52.2956 173.331 50.8278 175.45 48.7149C177.541 46.6294 179.09 44.0414 179.931 41.2305C180.124 40.5864 179.903 39.8898 179.375 39.4758Z\"\n                      />\n                      <g className=\"sun\">\n                        <path\n                          className=\"sun__part\"\n                          d=\"M64.5 45.6492C59.4551 45.6492 55.3507 41.5449 55.3507 36.4999C55.3507 31.4549 59.4551 27.3506 64.5 27.3506C69.5449 27.3506 73.6493 31.455 73.6493 36.4999C73.6493 41.5448 69.5449 45.6492 64.5 45.6492ZM64.5 29.9873C60.909 29.9873 57.9874 32.9089 57.9874 36.4999C57.9874 40.0909 60.9089 43.0125 64.5 43.0125C68.0911 43.0125 71.0126 40.0909 71.0126 36.4999C71.0126 32.9089 68.091 29.9873 64.5 29.9873Z\"\n                        />\n                        <path\n                          className=\"sun__part\"\n                          d=\"M64.5 24.2016C63.7719 24.2016 63.1816 23.6113 63.1816 22.8832V15.3184C63.1816 14.5903 63.7719 14 64.5 14C65.2281 14 65.8184 14.5903 65.8184 15.3184V22.8832C65.8184 23.6113 65.2281 24.2016 64.5 24.2016Z\"\n                        />\n                        <path\n                          className=\"sun__part\"\n                          d=\"M54.8715 28.19C54.5341 28.19 54.1967 28.0613 53.9393 27.8039L48.5901 22.4547C48.0752 21.9398 48.0752 21.1051 48.5901 20.5902C49.1048 20.0754 49.9396 20.0754 50.4545 20.5902L55.8037 25.9394C56.3185 26.4542 56.3185 27.2889 55.8037 27.8038C55.5463 28.0612 55.2089 28.19 54.8715 28.19Z\"\n                        />\n                        <path\n                          className=\"sun__part\"\n                          d=\"M50.8832 37.8184H43.3184C42.5903 37.8184 42 37.2281 42 36.5C42 35.7719 42.5903 35.1816 43.3184 35.1816H50.8832C51.6113 35.1816 52.2016 35.7719 52.2016 36.5C52.2016 37.2281 51.6113 37.8184 50.8832 37.8184Z\"\n                        />\n                        <path\n                          className=\"sun__part\"\n                          d=\"M49.5223 52.7959C49.1849 52.7959 48.8475 52.6672 48.5901 52.4097C48.0753 51.8948 48.0753 51.0601 48.5901 50.5453L53.9393 45.1961C54.4542 44.6814 55.289 44.6814 55.8037 45.1961C56.3186 45.711 56.3186 46.5457 55.8037 47.0606L50.4545 52.4098C50.1971 52.6671 49.8597 52.7959 49.5223 52.7959Z\"\n                        />\n                        <path\n                          className=\"sun__part\"\n                          d=\"M64.5 58.9999C63.7719 58.9999 63.1816 58.4096 63.1816 57.6815V50.1167C63.1816 49.3886 63.7719 48.7983 64.5 48.7983C65.2281 48.7983 65.8184 49.3886 65.8184 50.1167V57.6815C65.8184 58.4096 65.2281 58.9999 64.5 58.9999Z\"\n                        />\n                        <path\n                          className=\"sun__part\"\n                          d=\"M79.4777 52.7958C79.1403 52.7958 78.8029 52.6672 78.5456 52.4097L73.1964 47.0606C72.6815 46.5458 72.6815 45.7111 73.1964 45.1962C73.7111 44.6813 74.5459 44.6813 75.0608 45.1962L80.41 50.5453C80.9248 51.0602 80.9248 51.8949 80.41 52.4097C80.1525 52.6671 79.8151 52.7958 79.4777 52.7958Z\"\n                        />\n                        <path\n                          className=\"sun__part\"\n                          d=\"M85.6816 37.8184H78.1168C77.3887 37.8184 76.7984 37.2281 76.7984 36.5C76.7984 35.7719 77.3887 35.1816 78.1168 35.1816H85.6816C86.4097 35.1816 87 35.7719 87 36.5C87 37.2281 86.4097 37.8184 85.6816 37.8184Z\"\n                        />\n                        <path\n                          className=\"sun__part\"\n                          d=\"M74.1285 28.1899C73.7911 28.1899 73.4537 28.0612 73.1964 27.8037C72.6815 27.2889 72.6815 26.4542 73.1964 25.9393L78.5456 20.5902C79.0603 20.0755 79.8951 20.0753 80.41 20.5902C80.9248 21.105 80.9248 21.9397 80.41 22.4546L75.0608 27.8037C74.8033 28.0611 74.4658 28.1899 74.1285 28.1899Z\"\n                        />\n                        <circle\n                          className=\"sun__part\"\n                          cx=\"64.5\"\n                          cy=\"36.5002\"\n                          r=\"8.35714\"\n                        />\n                      </g>\n                      <defs>\n                        <filter\n                          id=\"filter0_d\"\n                          x=\"0\"\n                          y=\"0\"\n                          width=\"226\"\n                          height=\"78\"\n                          filterUnits=\"userSpaceOnUse\"\n                          colorInterpolationFilters=\"sRGB\"\n                        >\n                          <feFlood\n                            floodOpacity=\"0\"\n                            result=\"BackgroundImageFix\"\n                          />\n                          <feColorMatrix\n                            in=\"SourceAlpha\"\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\n                          />\n                          <feOffset dy=\"2\" />\n                          <feGaussianBlur stdDeviation=\"5\" />\n                          <feColorMatrix\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.25 0\"\n                          />\n                          <feBlend\n                            mode=\"normal\"\n                            in2=\"BackgroundImageFix\"\n                            result=\"effect1_dropShadow\"\n                          />\n                          <feBlend\n                            mode=\"normal\"\n                            in=\"SourceGraphic\"\n                            in2=\"effect1_dropShadow\"\n                            result=\"shape\"\n                          />\n                        </filter>\n                      </defs>\n                    </svg>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-lg\">\n              <div\n                style={{\n                  display: `flex`,\n                  justifyContent: `center`,\n                  marginTop: `5%`,\n                }}\n              >\n                <p\n                  style={{\n                    fontSize: `21px`,\n                    fontWeight: `600`,\n                    marginRight: `10px`,\n                  }}\n                >\n                  try me\n                </p>\n                <svg\n                  width=\"28\"\n                  height=\"28\"\n                  viewBox=\"0 0 28 28\"\n                  fill=\"none\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path\n                    className=\"try-me__arrow\"\n                    fill-rule=\"evenodd\"\n                    clip-rule=\"evenodd\"\n                    d=\"M16.8246 0H10.4153V16.1029H0L13.5964 27.9997L27.1927 16.1029H16.8246V0Z\"\n                  />\n                </svg>\n              </div>\n              <div\n                className=\"calculator\"\n                style={{\n                  backgroundColor: colors.background,\n                  color: colors.text,\n                }}\n                id=\"tipit-preview\"\n              >\n                <span className=\"calculator__top\"></span>\n                <div\n                  className=\"w-100\"\n                  style={{\n                    overflow: `hidden`,\n                  }}\n                >\n                  <Header />\n                  <Calculator />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <canvas id=\"canvas\" ref={canvasRef}></canvas>\n      </main>\n      <footer className=\"footer\">\n        <div className=\"container\" style={{ paddingLeft: 0 }}>\n          <a href=\"https://www.savaslabs.com/\">\n            <LabsLogo />\n          </a>\n        </div>\n      </footer>\n    </>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport ReactGA from \"react-ga\";\nimport AppContext, { useTheme } from \"./components/AppContext\";\nimport { Landing } from \"./components/Landing\";\n\nexport const App = () => {\n  useEffect(() => {\n    ReactGA.initialize(\"UA-61514316-4\");\n    ReactGA.pageview(window.location.pathname);\n  }, []);\n\n  const _storeData = () => {\n    try {\n      localStorage.clear();\n      const settingsToSave = {\n        defaultTipLow: userSettings.defaultTipLow,\n        defaultTipHigh: userSettings.defaultTipHigh,\n        theme: userSettings.theme,\n      };\n      localStorage.setItem(\"@store:appContext\", JSON.stringify(settingsToSave));\n    } catch (error) {\n      console.log(\"Error saving user settings.\");\n    }\n  };\n\n  const [initialAppLoad, setInitialAppLoad] = useState(true);\n\n  const _retrieveData = () => {\n    try {\n      const value = localStorage.getItem(\"@store:appContext\");\n      const savedSettings = JSON.parse(value);\n      const themeStylesheet = document.getElementById(\"theme\");\n      if (savedSettings !== null) {\n        setDefaultTipLow(savedSettings.defaultTipLow);\n        setDefaultTipHigh(savedSettings.defaultTipHigh);\n        setTheme(savedSettings.theme);\n        themeStylesheet.href = \"/tipit-landing/\" + savedSettings.theme + \".css\";\n      }\n    } catch (error) {\n      console.log(\"No user setting data was retrieved\");\n    }\n    setInitialAppLoad(false);\n  };\n\n  const [defaultTipLow, setDefaultTipLow] = useState(\"18\");\n  const [defaultTipHigh, setDefaultTipHigh] = useState(\"25\");\n  const [theme, setTheme] = useState(\"light\");\n\n  const updateTipLowContext = input => {\n    setDefaultTipLow(input);\n  };\n\n  const updateTipHighContext = input => {\n    setDefaultTipHigh(input);\n  };\n\n  const toggleTheme = () => {\n    const themeStylesheet = document.getElementById(\"theme\");\n    if (themeStylesheet.href.includes(\"light\")) {\n      themeStylesheet.href = \"/tipit-landing/dark.css\";\n    } else {\n      themeStylesheet.href = \"/tipit-landing/light.css\";\n    }\n    theme === \"light\" ? setTheme(\"dark\") : setTheme(\"light\");\n  };\n\n  const userSettings = {\n    defaultTipLow: defaultTipLow,\n    defaultTipHigh: defaultTipHigh,\n    theme: theme,\n    useTheme,\n    toggleTheme,\n    updateTipLowContext,\n    updateTipHighContext,\n  };\n\n  useEffect(() => {\n    initialAppLoad ? _retrieveData() : _storeData();\n  });\n\n  return (\n    <AppContext.Provider value={userSettings}>\n      <Landing />\n    </AppContext.Provider>\n  );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { App } from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n//Change to serviceWork.register to turn on PWA.\nserviceWorker.unregister();\n"],"sourceRoot":""}